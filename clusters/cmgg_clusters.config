profiles {
    "cmgg_slurm" {
        docker {
            enabled         = true
            runOptions      = "--platform linux/x86_64" 
        }

        params {
            config_profile_description  = 'CMGG Slurm config'
            config_profile_contact      = '@matthdsm'
        }
        process {
            executor = 'slurm'
            queue = 'debug'
            maxRetries = 2

            resourceLimits = [
                cpus: 80,
                memory: 630.GB,
                time: 72.h
            ]
        }

        report {
            overwrite = true
        }
    }
    "cmgg_nomad" {
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false

        params {
            config_profile_description  = 'CMGG Nomad job config'
            config_profile_contact      = '@matthdsm'
        }

        executor {
            name          = 'local'
            cpus          = 36
            memory        = 288.GB
        }

        process {
            resourceLimits = [
                cpus: 8,
                memory: 64.GB,
                time: 72.h
            ]
        }

        report {
            overwrite = true
        }
    }
    "cmgg_nomad_distributed" {
        plugins {
            id 'nf-nomad@0.1.2'
        }

        process {
            executor = "nomad"
            docker.enabled = true
            resourceLimits = [
                cpus: 80,
                memory: 630.GB,
                time: 72.h
            ]
        }

        workDir = "/scratch"

        params {
            config_profile_description  = 'CMGG Nomad distributed job config'
            config_profile_contact      = '@matthdsm'
        }
        
        nomad {
            client {
                address = System.getenv("NOMAD_ADDR")
                token   = System.getenv("NOMAD_TOKEN")
            }

            jobs {
                deleteOnCompletion = false
                namespace = "nextflow"
                datacenters = ['s10']

                volumes = [
                    { type "csi" name "nf_scratch_volume" path "/scratch"},
                    { type "csi" name "nf_reference_volume" path "/references" readOnly true},
                    { type "csi" name "nf_projects_volume" path "/projects"},
                    { type "csi" name "nf_cmgg_upload_ugent_volume" path "/media/cmgg_upload" readOnly true},
                ]
            }
        }
    }
}